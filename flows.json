[
    {
        "id": "b6ab8eba4e78f23f",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5a6d3c9ee29e130a",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": ""
    },
    {
        "id": "920f88c2a93b001d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c88e7df93ca8c77d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "4ff48984.4f9cb",
        "type": "tab",
        "label": "Form 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dface2e8.633cb",
        "type": "tab",
        "label": "Buffer to String",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7ba9e57563727c21",
        "type": "modbus-client",
        "name": "node1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "28523f14152e8980",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5729739744cad012",
        "type": "ui_group",
        "name": "Login",
        "tab": "31b589037923884f",
        "order": 3,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "1c25415d.b8427f",
        "type": "sqlitedb",
        "db": "/home/pi/sqlite/nodered"
    },
    {
        "id": "f5a33dc2.f6f08",
        "type": "sqlitedb",
        "db": "C:\\Users\\Techa\\.node-red\\test.db",
        "mode": "RWC"
    },
    {
        "id": "31b589037923884f",
        "type": "ui_tab",
        "name": "Login",
        "icon": "fa-sign-in",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ab93a94c33fefe65",
        "type": "ui_group",
        "name": "Tieude",
        "tab": "31b589037923884f",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false
    },
    {
        "id": "a091dc9295da85f3",
        "type": "ui_spacer",
        "z": "5a6d3c9ee29e130a",
        "name": "spacer",
        "group": "ce3b7147e306691f",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "ff9fdb9a.7da098",
        "type": "ui_group",
        "name": "TEST",
        "tab": "7dcc246f.ee661c",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "7dcc246f.ee661c",
        "type": "ui_tab",
        "name": "TEST",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1ef06fcfb08d13c3",
        "type": "ui_tab",
        "name": "SAVINA IOT SOLUTION",
        "icon": "Temp",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f2c8d158468c0832",
        "type": "ui_group",
        "name": "Power",
        "tab": "1ef06fcfb08d13c3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "42ad178e9d3e8116",
        "type": "ui_group",
        "name": "UI",
        "tab": "1ef06fcfb08d13c3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "03ed31065501a492",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6dcb077aea937a70",
        "type": "ui_group",
        "name": "Home",
        "tab": "03ed31065501a492",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3d9e45e.bcd50ba",
        "type": "ui_group",
        "name": "Radial Gauges",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "06783fc8262a377c",
        "type": "ui_group",
        "name": "Temp",
        "tab": "1ef06fcfb08d13c3",
        "order": 3,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "17d68be92d37f605",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "1ef06fcfb08d13c3",
        "order": 4,
        "disp": true,
        "width": 3,
        "collapse": false
    },
    {
        "id": "c61c03376feaf1ae",
        "type": "ui_group",
        "name": "Information",
        "tab": "1ef06fcfb08d13c3",
        "order": 5,
        "disp": true,
        "width": 18,
        "collapse": false
    },
    {
        "id": "0d16738fb3520007",
        "type": "ui_group",
        "name": "Control Room",
        "tab": "1ef06fcfb08d13c3",
        "order": 6,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "e851faa98ab177bb",
        "type": "ui_group",
        "name": "Chart",
        "tab": "1ef06fcfb08d13c3",
        "order": 7,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "db938ea095c5b37e",
        "type": "ui_group",
        "name": "Mode",
        "tab": "1ef06fcfb08d13c3",
        "order": 8,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "e49d9473fb95bc66",
        "type": "ui_group",
        "name": "Device",
        "tab": "1ef06fcfb08d13c3",
        "order": 9,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "26d85200d14a4e63",
        "type": "ui_group",
        "name": "Alarm",
        "tab": "1ef06fcfb08d13c3",
        "order": 10,
        "disp": true,
        "width": 18,
        "collapse": false
    },
    {
        "id": "c35b273642e9fe48",
        "type": "ui_group",
        "name": "Tank Level",
        "tab": "1ef06fcfb08d13c3",
        "order": 11,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "4f6e1b77f656a46a",
        "type": "ui_group",
        "name": "MiFlora",
        "tab": "d09373c95287aa35",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "aed124ab48a2fe2a",
        "type": "ui_group",
        "name": "Report",
        "tab": "1761a499e7fc2425",
        "order": 2,
        "disp": true,
        "width": "18"
    },
    {
        "id": "b297af9bb1a4c442",
        "type": "ui_group",
        "name": "Selection",
        "tab": "1761a499e7fc2425",
        "order": 1,
        "disp": true,
        "width": "5"
    },
    {
        "id": "d09373c95287aa35",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": "1"
    },
    {
        "id": "1761a499e7fc2425",
        "type": "ui_tab",
        "name": "Reports",
        "icon": "dashboard",
        "order": 9
    },
    {
        "id": "85b3334152dcc728",
        "type": "ui_spacer",
        "z": "b6ab8eba4e78f23f",
        "name": "spacer",
        "group": "e851faa98ab177bb",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "d68e7be3.88f088",
        "type": "ui_group",
        "name": "Forms Example",
        "tab": "67ff17e9.83751",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "54bca71e.4287f",
        "type": "ui_group",
        "name": "Form",
        "tab": "67ff17e9.83751",
        "order": 2,
        "disp": true,
        "width": 10,
        "collapse": false
    },
    {
        "id": "6d4b6f37.3f68b",
        "type": "ui_group",
        "z": "4ff48984.4f9cb",
        "name": "Dashboard Event Log",
        "tab": "67ff17e9.83751",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "67ff17e9.83751",
        "type": "ui_tab",
        "name": "Forms Example ",
        "icon": "home",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bc85d55e33b35302",
        "type": "ui_group",
        "name": "Template",
        "tab": "67ff17e9.83751",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false
    },
    {
        "id": "58c016f8.563088",
        "type": "ui_group",
        "name": "G1",
        "tab": "e09ece59.1c9fa",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "e09ece59.1c9fa",
        "type": "ui_tab",
        "name": "TAB1",
        "icon": "dashboard"
    },
    {
        "id": "255451353f160934",
        "type": "ui_form",
        "z": "5a6d3c9ee29e130a",
        "name": "",
        "label": "",
        "group": "5729739744cad012",
        "order": 2,
        "width": 5,
        "height": 2,
        "options": [
            {
                "label": "Tên người dùng",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Mật khẩu",
                "value": "password",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Duy trì đăng nhập",
                "value": "EMPTY",
                "type": "switch",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "EMPTY": false
        },
        "payload": "",
        "submit": "Đăng nhập",
        "cancel": "Hủy",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 570,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0c45b9065cd3bccb",
        "type": "inject",
        "z": "5a6d3c9ee29e130a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "255451353f160934",
                "6fd2b9824092431a"
            ]
        ]
    },
    {
        "id": "6fd2b9824092431a",
        "type": "ui_text",
        "z": "5a6d3c9ee29e130a",
        "group": "5729739744cad012",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "",
        "label": "ĐĂNG NHẬP HỆ THỐNG",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 640,
        "y": 20,
        "wires": []
    },
    {
        "id": "8ff58fb87b9156a5",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"name\":\"MEQ0451495\",\"room\":\"Bathroom\",\"SET_TEMPERATURE-value\":22,\"ACTUAL_TEMPERATURE-value\":21.8,\"VALVE_STATE-value\":90,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":true,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875547\",\"room\":\"Living Room\",\"SET_TEMPERATURE-value\":12,\"ACTUAL_TEMPERATURE-value\":16.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":1},{\"name\":\"MEQ1875538\",\"room\":\"Living Room\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":19.5,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.6,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":2},{\"name\":\"MEQ0447462\",\"room\":\"Kitchen\",\"SET_TEMPERATURE-value\":17,\"ACTUAL_TEMPERATURE-value\":22.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":10,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":3},{\"name\":\"MEQ1875551\",\"room\":\"Office\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":20.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ0447425\",\"room\":\"Dining Room\",\"SET_TEMPERATURE-value\":19,\"ACTUAL_TEMPERATURE-value\":20.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875546\",\"room\":\"Dining Room\",\"SET_TEMPERATURE-value\":20,\"ACTUAL_TEMPERATURE-value\":18.8,\"VALVE_STATE-value\":99,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ0447483\",\"room\":\"Bedroom\",\"SET_TEMPERATURE-value\":17,\"ACTUAL_TEMPERATURE-value\":22.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875541\",\"room\":\"Child\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":20.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875552\",\"room\":\"Guest Room\",\"SET_TEMPERATURE-value\":20,\"ACTUAL_TEMPERATURE-value\":21.1,\"VALVE_STATE-value\":9,\"BATTERY_STATE-value\":2.8,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0}]",
        "payloadType": "json",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "3b9eef1e5ae03c24"
            ]
        ]
    },
    {
        "id": "3b9eef1e5ae03c24",
        "type": "change",
        "z": "b6ab8eba4e78f23f",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.field});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"groupHeader\":\"function (value, count, data, group) {return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\" Termostat\\\"+((count>1) ? \\\"e\\\" : \\\"\\\") + \\\")</span>\\\";}\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"ROom\",\"field\":\"room\",\"width\":100,\"frozen\":true},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Device\",\"field\":\"name\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Type\",\"field\":\"deviceType\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Measurements\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"target\",\"field\":\"SET_TEMPERATURE-value\",\"formatter\":\"function(cell, formatterParams, onRendered){return cell.getValue()+'°C';}\",\"topCalc\":\"avg\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"min\":10,\"max\":25,\"color\":[\"blue\",\"green\",\"red\"],\"legend\":\"function (value) {return '&nbsp;&nbsp;'+value+'°C';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"left\"},\"title\":\"current\",\"field\":\"ACTUAL_TEMPERATURE-value\",\"formatter\":\"progress\",\"topCalc\":\"avg\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":99,\"color\":[\"gray\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+' %' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Valve\",\"field\":\"VALVE_STATE-value\",\"formatter\":\"progress\",\"topCalc\":\"max\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"min\":1.5,\"max\":4.6,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {return value+' V';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Batt\",\"field\":\"BATTERY_STATE-value\",\"formatter\":\"progress\",\"topCalc\":\"min\",\"width\":100}]},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Settings\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":30,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#101010;'>\\\"+value+\\\" min</span>\\\";     else         return \\\"<span style='color:#A0A0A0;'>aus</span>\\\"; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Boost\",\"field\":\"BOOST_STATE-value\",\"formatter\":\"progress\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"allowEmpty\":true,\"allowTruthy\":true,\"tickElement\":\"<i class='fa fa-clock-o'></i>\",\"crossElement\":\"<i class='fa fa-ban'></i>\"},\"title\":\"Auto\",\"field\":\"AUTO_MODE-value\",\"formatter\":\"tickCross\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Mode\",\"field\":\"CONTROL_MODE-value\",\"formatter\":\"function(cell, formatterParams, onRendered){     var html=\\\"<i class=\\\\\\\"\\\";     switch(cell.getValue()) {         case 0: html+=\\\"fa fa-calendar-check-o\\\"; break;         case 1: html+=\\\"fa fa-hand-o-up\\\"; break;         case 2: html+=\\\"fa fa-suitcase\\\"; break;         case 3: html+=\\\"fa fa-spinner fa-spin fa-fw\\\"; break;     }     html+='\\\\\\\"></i>';     return html; }\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Auto\",\"field\":\"AUTO_MODE-value\",\"formatter\":\"tick\",\"width\":100,\"align\":\"center\"}]}],\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\"},\"customHeight\":12}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 496,
        "y": 820,
        "wires": [
            [
                "14a76bf8451e0475"
            ]
        ]
    },
    {
        "id": "aaf8c3afeab18716",
        "type": "debug",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 809,
        "y": 820,
        "wires": []
    },
    {
        "id": "14a76bf8451e0475",
        "type": "ui_table",
        "z": "b6ab8eba4e78f23f",
        "group": "ff9fdb9a.7da098",
        "name": "Thermostats",
        "order": 1,
        "width": "6",
        "height": "7",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 659,
        "y": 820,
        "wires": [
            [
                "aaf8c3afeab18716"
            ]
        ]
    },
    {
        "id": "2e6a6379.742abc",
        "type": "ui_table",
        "z": "b6ab8eba4e78f23f",
        "group": "26d85200d14a4e63",
        "name": "testTable",
        "order": 1,
        "width": 0,
        "height": 0,
        "columns": [
            {
                "field": "rowNumber",
                "title": "Device ID",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "textValue",
                "title": "Devices",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "numberValue",
                "title": "Status",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 800,
        "y": 980,
        "wires": [
            [
                "1c377ea0.5801e1"
            ]
        ]
    },
    {
        "id": "16664cef.5b26b3",
        "type": "function",
        "z": "b6ab8eba4e78f23f",
        "name": "table paramter",
        "func": "msg.ui_control = {tabulator:{}};\n\n//workaround that buttos can`t deliver empty strings\nif (msg.payload.hasOwnProperty('payload')) {\n    msg.payload=msg.payload.payload;\n}\n\nmsg.ui_control.tabulator[msg.topic]=msg.payload;\ndelete msg.topic;\nmsg.payload=null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 582,
        "y": 1269,
        "wires": [
            [
                "2e6a6379.742abc",
                "b8d75d24.6cbed"
            ]
        ]
    },
    {
        "id": "b8d75d24.6cbed",
        "type": "debug",
        "z": "b6ab8eba4e78f23f",
        "name": "table input",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1269,
        "wires": []
    },
    {
        "id": "1c377ea0.5801e1",
        "type": "debug",
        "z": "b6ab8eba4e78f23f",
        "name": "table output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 963,
        "y": 980,
        "wires": []
    },
    {
        "id": "b15c31a9.af37c",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "selectable",
        "label": "selectable",
        "tooltip": "",
        "group": "ff9fdb9a.7da098",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "selectable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 222,
        "y": 1065,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "75207e8d.c54d4",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "movableColumns",
        "label": "movableColumns",
        "tooltip": "",
        "group": "ff9fdb9a.7da098",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "movableColumns",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 252,
        "y": 1116,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "c585e7a1.dfc648",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 9,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Format Numbers > 100",
        "tooltip": "using a rowFormatter callback function",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "function(row){         if(row.getData().numberValue>100){             row.getElement().style.backgroundColor = \"#A6A6DF\";         }     },",
        "payloadType": "str",
        "topic": "rowFormatter",
        "x": 272,
        "y": 1252,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "f178c6fe.710ef8",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Fill demo data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"textValue\":\"Line #1\",\"numberValue\":123.12},{\"textValue\":\"Line #2\",\"numberValue\":100},{\"textValue\":\"Line #3\",\"numberValue\":50}]",
        "payloadType": "json",
        "topic": "rowFormatter",
        "x": 242,
        "y": 980,
        "wires": [
            [
                "2e6a6379.742abc"
            ]
        ]
    },
    {
        "id": "2403f929.df4006",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 11,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "inject Tooltips callback",
        "tooltip": "cell.getColumn().getField() + \" - \" + cell.getValue();",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "function(cell){return  cell.getColumn().getField() + \" - \" + cell.getValue(); },",
        "payloadType": "str",
        "topic": "tooltips",
        "x": 262,
        "y": 1354,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "f6c68c45.58003",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 12,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "clear Tooltips callback",
        "tooltip": "empty string is not possible! so use a single space",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"payload\":\"\"}",
        "payloadType": "json",
        "topic": "tooltips",
        "x": 262,
        "y": 1388,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "d2b29dda.60a5a",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 13,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "reformat Number column",
        "tooltip": "inject additional paramters to numberValue column",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"numberValue\",\"formatterParams\":{\"min\":0,\"max\":200,\"legend\":\"function (value) {     if (value<100) return \\\"<span style='color:#FF0000;'>\\\"+value+\\\"</span>\\\";     else return \\\"<span style='color:#000000;'>\\\"+value+\\\"</span>\\\";  }\",\"legendAlign\":\"center\"},\"formatter\":\"progress\",\"topCalc\":\"function(values, data, calcParams){     var total = 0;     var calc = 0;     var count = 0;     data.forEach(value => {         total+=Number(value.numberValue);         count++;     });     if (count>0) calc=(total/count).toFixed(2);     return `${calc} (avg)`; }\",\"headerTooltip\":\"avarage\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 272,
        "y": 1456,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "7b6490b3.cd9c7",
        "type": "function",
        "z": "b6ab8eba4e78f23f",
        "name": "callback function(s)",
        "func": "// how to use the editor to write callback functions\n// DO NOT wire this into your flow!\n// copy / paste \"function( ... }\" into the correct calback parameter\n// use the \"debugger\" statement to debug your callback inside your browser\n\nvar topCalc = function(values, data, calcParams){\n    var total = 0;\n    var calc = 0;\n    var count = 0;\n    data.forEach(value => {\n        total+=Number(value.numberValue);\n        count++;\n    });\n    if (count>0) calc=(total/count).toFixed(2);\n    return `${calc} (avg)`;\n}\n\nvar legend = function (value) {\n    if (value<100) return \"<span style='color:#FF0000;'>\"+value+\"</span>\";\n    else return \"<span style='color:#000000;'>\"+value+\"</span>\"; \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 592,
        "y": 1388,
        "wires": [
            []
        ]
    },
    {
        "id": "91506d4b.4956a",
        "type": "comment",
        "z": "b6ab8eba4e78f23f",
        "name": "Intentionally not wired into the flow!",
        "info": "use the editor to write callback functions\n\nDO NOT wire this into your flow!\n\ncopy / paste `function( ... }` into the correct calback parameter\nuse the `debugger` statement to debug your callback inside your browser\n",
        "x": 642,
        "y": 1354,
        "wires": []
    },
    {
        "id": "732afcea.f728f4",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 14,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "reset Number column",
        "tooltip": "inject additional paramters to numberValue column",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"numberValue\",\"formatter\":\"plainText\",\"topCalc\":\"\",\"headerTooltip\":\"\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 262,
        "y": 1490,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "89cca7ea.7fc998",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 15,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "add/show id column",
        "tooltip": "add a new column",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"id\",\"title\":\"id\",\"visible\":true,\"formatter\":\"plainText\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 262,
        "y": 1558,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "32a3c4ad.1b85fc",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 16,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "hide id column",
        "tooltip": "hide id column (it is not possible to delete a existing column definition)",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"id\",\"title\":\"id\",\"visible\":false,\"formatter\":\"plainText\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 242,
        "y": 1592,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "25247f4b.cc7ec",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 76,
        "y": 1116,
        "wires": [
            [
                "75207e8d.c54d4",
                "bd3fd382.a2aa9"
            ]
        ]
    },
    {
        "id": "18ed8d27.bf00a3",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 10,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "reset Numbers > 100",
        "tooltip": "using a rowFormatter callback function",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"payload\":\"\"}",
        "payloadType": "json",
        "topic": "rowFormatter",
        "x": 262,
        "y": 1286,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "bd3fd382.a2aa9",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "headerVisible",
        "label": "headerVisible",
        "tooltip": "",
        "group": "ff9fdb9a.7da098",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "headerVisible",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 242,
        "y": 1167,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "d81aa8bc.35b81",
        "type": "ui_template",
        "z": "920f88c2a93b001d",
        "group": "",
        "name": "Node-Red Dashboard Custom CSS",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\nroot, a, button, p, div {\n    -webkit-user-select: none !important;\n}\n\nbody {\n    background: -webkit-linear-gradient(\n    55deg,\n    #009785 0%,\n    #245aa5 50%,\n    #b800e9 100%\n    );\n    -webkit-touch-callout: none !important;\n}\n\nbody.nr-dashboard-theme md-toolbar,\nbody.nr-dashboard-theme md-content md-card {\n    background-color: transparent !important;\n    color: #FFFFFF;\n}\n\nui-card-panel {\n    background-color: rgba(255,255,255,0.1) !important;\n    border-radius: 10px !important;\n}\n    \n#Homey_Dashboard_Navigation {\n    background-color: transparent !important;\n    border-radius: 10px !important;\n}\n\n.md-card.md-default-theme, md-card {\n    border-radius: 10px;\n}\n\n.nr-dashboard-switch.ng-scope {\n    background-color: rgba(255,255,255,.2) !important;\n}\n\n.nr-dashboard-switch.ng-scope:hover {\n    background-color: rgba(255,255,255,.5) !important;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: rgba(255,255,255,.2);\n}\n\n.md-button {\n    border-radius: 10px;\n}\n\n.nr-dashboard-cardpanel layout-column {\n    background-color: rgba(255,255,255,0.2) !important;\n    background-color: transparent !important;\n    border-radius: 10px !important;\n}\n\n.nr-dashboard-theme ui-card-panel {\n    border: none;\n}\n\n.nr-dashboard-template {\n    overflow-y: visible;\n}\n.nr-dashboard-theme md-content md-card {\n    background-color: transparent !important;\n}\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: rgba(255, 255, 255, 0.5);\n}\n\n\n</style>\n\n<script>\ndocument.ontouchmove = function (e) {\n    e.preventDefault();\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "x": 420,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c674a8b2b21efa",
        "type": "function",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "func": "min = Math.round(Math.random()*1000);\nmax = Math.round((Math.random()*10000)+1000);\n\nmsg.payload = {\n  factory: {\n    machine00: {\n      min: min,\n      max: max,\n      failProb: 20,\n      name: \"GE 5200\"\n    },\n    machine01: {\n      min: min*5,\n      max: max*2,\n      failProb: 10,\n      name: \"BB SQ100\"\n    }\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 40,
        "wires": [
            [
                "1f7e5d148707f275"
            ]
        ]
    },
    {
        "id": "e48bf2c0c58fda5b",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 40,
        "wires": [
            [
                "c1c674a8b2b21efa"
            ]
        ]
    },
    {
        "id": "1f7e5d148707f275",
        "type": "ui_template",
        "z": "b6ab8eba4e78f23f",
        "group": "f2c8d158468c0832",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\nspan {\n  display: inline-block;\n  width: 50px;\n}\n</style>\n<div layout=\"row\" layout-align=\"start center\">\n  <span flex>Voltage</span>\n  <span flex>Current</span>\n  <span flex>Power</span>\n  <span flex>Cosphi</span>\n</div>\n<div layout=\"row\" layout-align=\"start center\" ng-repeat=\"machine in msg.payload.factory\">\n  <span flex style=\"color: green\">{{machine.min}}</span>\n  <span flex style=\"color: blue\">{{machine.max}}</span>\n  <span flex style=\"color: black\">{{machine.failProb}}%</span>\n  <span flex style=\"color: black\">{{machine.name}}</span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 850,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e5d80dbd380c84e8",
        "type": "ui_template",
        "z": "b6ab8eba4e78f23f",
        "group": "42ad178e9d3e8116",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n  <mat-grid-tile>1</mat-grid-tile>\n  <mat-grid-tile>2</mat-grid-tile>\n  <mat-grid-tile>3</mat-grid-tile>\n  <mat-grid-tile>4</mat-grid-tile>\n</mat-grid-list>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 840,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a691217f2a4f0d29",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 100,
        "wires": [
            [
                "e5d80dbd380c84e8",
                "56c00fa586aba139"
            ]
        ]
    },
    {
        "id": "ab7933aa6af4eab1",
        "type": "inject",
        "z": "920f88c2a93b001d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "54bebd9b57ed0aa2"
            ]
        ]
    },
    {
        "id": "54bebd9b57ed0aa2",
        "type": "ui_template",
        "z": "920f88c2a93b001d",
        "group": "6dcb077aea937a70",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "4",
        "format": "\n\n\n<div>{{msg.payload}}</div>\n\n<style>\n.masonry-container {\n    width: 800px;\n}\n</style>\n\n<md-button ng-click=\"send({payload: 'Hello World'})\">\n    Click me to send a hello world\n</md-button>\n\n<! <md-slider ng-model=\"msg.payload\" ng-change=\"send(msg)\"></md-slider> \n\n<div flex layout=\"row\" layout-align=\"space-around center\">\n    <md-button ng-repeat=\"b in buttons\" class=\"md-icon-button\" ng-click=\"click(b)\">\n        <ng-md-icon icon=\"{{msg.payload[b.payload]?b.icon2:b.icon}}\"\n                    ng-style=\"{color: msg.payload[b.payload]?b.color2:b.color}\"></ng-md-icon>\n    </md-button>\n</div>\n\n\n\n<script>\n    scope.buttons = [{\n        icon: 'pause', color: 'black',\n        icon2: 'play_arrow', color2: 'red',\n        payload: 'play',\n    }, {\n        icon: 'alarm', color: 'black',\n        icon2: 'alarm', color2: 'red',\n        payload: 'alarm',\n    }];\n\n    scope.click = function(b) {\n        if (!this.msg) this.msg = {};\n        if (!this.msg.payload) this.msg.payload = {};\n        this.msg.payload[b.payload] = !this.msg.payload[b.payload];\n        this.send(this.msg);\n    }.bind(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 450,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "142dae9.49d4751",
        "type": "ui_template",
        "z": "920f88c2a93b001d",
        "d": true,
        "group": "3d9e45e.bcd50ba",
        "name": "Dashboard stylesheet",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n/*\nIt is reasnoble to declare the colors as CSS variables\nso they can be easily called by name where needed.\n\nYou can see that in many places the variables are not used. Change it!\n*/\n\n:root {\n  --color-green-primary: rgb(51, 204, 51);\n  --color-green-secondary: rgb(26, 101, 26);\n  --color-red-primary: rgb(255, 0, 0);\n  --color-red-secondary: rgba(153,0,0,1);\n  --color-gray-primary:rgba(40,40,40,1);\n  --color-gray-secondary:rgba(65,65,65,1);\n  --color-text-primary: rgb(230, 226, 209);\n  --color-widget-border: rgb(84, 78, 78);\n}\n\n/*\nAll CSS adjustments are commented out.\nTurn rules on one by one and see the changes.\nDon't use too many elements cos it wil be confusing\nStart with simple elements like text, slider or button\n\nMany of elements like buttons have states, \nthose rules must be found and adjusted also.\n*/\n\n\n.masonry-container {\n    position: relative;\n    width: 100%;\n    height:100%;\n    margin: 0 auto;\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg,  var(--color-gray-primary) 0%, var(--color-gray-secondary) 100%);\n}\n\n\n\n.nr-dashboard-cardcontainer {\n    position: relative;\n    box-shadow: inset 0px 1px 4px 0px #000000bb;\n    border-radius: 15px;\n}\n\n\n \n.nr-dashboard-theme ui-card-panel {\n    background-color: #33333300;\n    color:var(--color-text-primary);\n    border-radius: 15px;\n    box-shadow: 0 0 8px 0px #00000080;\n}\n\n\n \nbody.nr-dashboard-theme md-content md-card {\n    background-color: #33333300;\n    color: var(--color-text-primary);\n    text-shadow: 4px 2px 4px #00000045;\n    box-shadow: 0 -1px 5px 1px #00000045;\n    border-radius: 12px;\n    border: 1px solid var(--color-widget-border);\n}\n\n\n\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n    color: var(--color-text-primary);\n}\n\n\n\n.md-button {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    min-height: 36px;\n    min-width: 88px;\n    line-height: 36px;\n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    border-radius: 12px;\n    box-sizing: border-box;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    outline: none;\n    border: 0;\n    padding: 0 6px;\n    margin: 6px 8px;\n    background: transparent;\n    color:var(--color-text-primary);\n    white-space: nowrap;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 14px;\n    font-style: inherit;\n    font-variant: inherit;\n    font-family: inherit;\n    text-decoration: none;\n    overflow: hidden;\n    transition: box-shadow .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1);\n}\n\n\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n    background-color: #88888800;\n    color:var(--color-text-primary);\n}\n\n\n/*\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n    background-color: #88888855;\n}\n*/\n\n\nmd-slider .md-thumb {\n    z-index: 1;\n    position: absolute;\n    left: -10px;\n    top: 14px;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    -webkit-transform: scale(.7);\n    transform: scale(.7);\n    transition: all .4s cubic-bezier(.25,.8,.25,1);\n    box-shadow: 0 0 6px #00000070;\n}\n\n\n/*\nAdvanced stuff - dynamic change of card CSS\n\nClasses here can be used to make colored stripe at the top of card\nUsage is not in here, but they are added to md-card when needed within another template\n*/\n.carderr {\n    background: rgb(255,0,0);\n    background: linear-gradient(180deg, var(--color-red-primary) 0px, var(--color-red-secondary) 3px, rgba(80,80,80,1) 4px, rgba(45,45,45,1) 100%);\n}\n.cardok {\n    background: rgb(39,255,0);\n    background: linear-gradient(180deg, var(--color-green-primary) 0px, var(--color-green-secondary) 3px, rgba(70,70,70,1) 4px, rgba(40,40,40,1) 100%);\n}\n\n\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 480,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "56c00fa586aba139",
        "type": "ui_text",
        "z": "b6ab8eba4e78f23f",
        "group": "06783fc8262a377c",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Nhiệt độ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "c54be101c7ddab8f",
        "type": "ui_text",
        "z": "b6ab8eba4e78f23f",
        "group": "17d68be92d37f605",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Độ ẩm",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "29c9d5018a830085",
        "type": "ui_template",
        "z": "b6ab8eba4e78f23f",
        "group": "c61c03376feaf1ae",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\nspan {\n  display: inline-block;\n  width: 50px;\n}\n</style>\n<div layout=\"row\" layout-align=\"start center\">\n  <span flex>Power In</span>\n  <span flex>Power Out</span>\n  <span flex>Solar</span>\n  <span flex>Hybrid</span>\n</div>\n<div layout=\"row\" layout-align=\"start center\" ng-repeat=\"machine in msg.payload.factory\">\n  <span flex style=\"color: yellow\">{{machine.min}}</span>\n  <span flex style=\"color: blue\">{{machine.max}}</span>\n  <span flex style=\"color: black\">{{machine.failProb}}%</span>\n  <span flex style=\"color: black\">{{machine.name}}</span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 860,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b2e8e1a202a82853",
        "type": "function",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "func": "min = Math.round(Math.random()*1000);\nmax = Math.round((Math.random()*10000)+1000);\n\nmsg.payload = {\n  factory: {\n    machine00: {\n      min: min,\n      max: max,\n      failProb: 20,\n      name: \"GE 5200\"\n    },\n    machine01: {\n      min: min*5,\n      max: max*2,\n      failProb: 10,\n      name: \"BB SQ100\"\n    }\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "29c9d5018a830085"
            ]
        ]
    },
    {
        "id": "cead4e7d095df6b4",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "b2e8e1a202a82853"
            ]
        ]
    },
    {
        "id": "eb57177a1b2986d4",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "0d16738fb3520007",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Floor",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 840,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "367e6fc3db2d93a9",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 340,
        "wires": [
            [
                "eb57177a1b2986d4",
                "97932dcecb7b3395",
                "d996d3c02d27e719",
                "7812b14b1d1a960b",
                "568918d80a530727",
                "65603559af1018e7"
            ]
        ]
    },
    {
        "id": "97932dcecb7b3395",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "0d16738fb3520007",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Level 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 840,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d996d3c02d27e719",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "0d16738fb3520007",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Level 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 840,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7812b14b1d1a960b",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "0d16738fb3520007",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "568918d80a530727",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "0d16738fb3520007",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "65603559af1018e7",
        "type": "ui_button",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "0d16738fb3520007",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "fd66075015a0d203",
        "type": "ui_chart",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "e851faa98ab177bb",
        "order": 1,
        "width": 12,
        "height": 4,
        "label": "Monitoring",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 400,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "9078eba8d515245f",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "22",
        "payloadType": "num",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "fd66075015a0d203"
            ]
        ]
    },
    {
        "id": "ac6cb6a12949a035",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 640,
        "wires": [
            [
                "dbd942a770f9e510",
                "ce12e0ebc65c78c9",
                "aca4654bf83a1eed",
                "9fe91fb365602502",
                "859a5641405e2f5f"
            ]
        ]
    },
    {
        "id": "dbd942a770f9e510",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Morning",
        "tooltip": "",
        "group": "db938ea095c5b37e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 430,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ce12e0ebc65c78c9",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Afternoon",
        "tooltip": "",
        "group": "db938ea095c5b37e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "aca4654bf83a1eed",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Evening",
        "tooltip": "",
        "group": "db938ea095c5b37e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "9fe91fb365602502",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Sleeping",
        "tooltip": "",
        "group": "db938ea095c5b37e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "859a5641405e2f5f",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Far Away",
        "tooltip": "",
        "group": "db938ea095c5b37e",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 440,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ea21e1e28a99a631",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Television",
        "tooltip": "",
        "group": "e49d9473fb95bc66",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 380,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "4c7fcd0d56b2b2c5",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1700,
        "wires": [
            [
                "ea21e1e28a99a631",
                "8543957b97d4922d",
                "c71744a734aabaab",
                "383d3cf7106f55c6",
                "b4b275fd05eb87e7"
            ]
        ]
    },
    {
        "id": "8543957b97d4922d",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Refrigerator",
        "tooltip": "",
        "group": "e49d9473fb95bc66",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 390,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "c71744a734aabaab",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Main Door",
        "tooltip": "",
        "group": "e49d9473fb95bc66",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 390,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "383d3cf7106f55c6",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Floor Window",
        "tooltip": "",
        "group": "e49d9473fb95bc66",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 400,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "b4b275fd05eb87e7",
        "type": "ui_switch",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "Camera",
        "tooltip": "",
        "group": "e49d9473fb95bc66",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 380,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "33111b5a70c70cb7",
        "type": "ui_gauge",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "group": "c35b273642e9fe48",
        "order": 1,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 750,
        "y": 1740,
        "wires": []
    },
    {
        "id": "0febcd04ad2e8224",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 560,
        "y": 1780,
        "wires": [
            [
                "33111b5a70c70cb7"
            ]
        ]
    },
    {
        "id": "8024d62fd5f6b2c9",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "Save to DB",
        "func": "var sql = \"\";\nvar d = new Date();\nvar epoch = d.getTime();\nvar outputs = [];\n\nsql = \"INSERT INTO sensor_data (device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','temp',\"+msg.payload.temperature+\",\"+epoch+\")\";\noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','sunlight',\"+msg.payload.sunlight+\",\"+epoch+\")\";\noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','moisture',\"+msg.payload.moisture+\",\"+epoch+\")\";\noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','fertility',\"+msg.payload.fertility+\",\"+epoch+\")\";        \noutputs.push({topic:sql});        \nsql = \"INSERT INTO sensor_data(device,sensor,value,epoch) \" +\n        \"VALUES ('miflora','battery',\"+msg.payload.battery+\",\"+epoch+\")\";        \noutputs.push({topic:sql});        \n    \n// Update the status with current timestamp\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Last update: \"+dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss});    \n      \nreturn [ outputs ];",
        "outputs": 1,
        "noerr": 0,
        "x": 131,
        "y": 94,
        "wires": [
            [
                "1583fc5a958e084d"
            ]
        ]
    },
    {
        "id": "1583fc5a958e084d",
        "type": "sqlite",
        "z": "c88e7df93ca8c77d",
        "mydb": "1c25415d.b8427f",
        "name": "Node Red DB",
        "x": 375,
        "y": 94,
        "wires": [
            []
        ]
    },
    {
        "id": "8e20faeb73a56029",
        "type": "comment",
        "z": "c88e7df93ca8c77d",
        "name": "Example on how to save multiple data points in DB",
        "info": "This function node creates multiple INSERT INTO\ncommands for data points that are stored in \nattributes of the payload.",
        "x": 237,
        "y": 46,
        "wires": []
    },
    {
        "id": "c4f1f69fa47eddfe",
        "type": "comment",
        "z": "c88e7df93ca8c77d",
        "name": "Data aggregation",
        "info": "Below example extract max, min and last from the\nsensor log table, and inserts them into an\naggregate table.",
        "x": 131.25,
        "y": 347.5,
        "wires": []
    },
    {
        "id": "3c14795013dc224e",
        "type": "inject",
        "z": "c88e7df93ca8c77d",
        "name": "",
        "repeat": "",
        "crontab": "00 3 * * *",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120.25,
        "y": 444.5000476837158,
        "wires": [
            [
                "5bce9baa1c999f29"
            ]
        ]
    },
    {
        "id": "5bce9baa1c999f29",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "Get Max values",
        "func": "var d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nd.setMilliseconds(999);\nvar enddate = d.getTime();\n\nmsg.topic = \"SELECT device,sensor,max(value) AS value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND (sensor='temp' or sensor='power' or sensor='moisture') GROUP BY sensor\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 308.25,
        "y": 443.5000476837158,
        "wires": [
            [
                "47b6a943614e5793"
            ]
        ]
    },
    {
        "id": "47b6a943614e5793",
        "type": "sqlite",
        "z": "c88e7df93ca8c77d",
        "mydb": "1c25415d.b8427f",
        "name": "DB",
        "x": 495.25,
        "y": 442.5000476837158,
        "wires": [
            [
                "3801f375cb679ce4"
            ]
        ]
    },
    {
        "id": "21b38b1ec98371e4",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "Get Min values",
        "func": "var d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nd.setMilliseconds(999);\nvar enddate = d.getTime();\n\nmsg.topic = \"SELECT device,sensor,MIN(value) as value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND (sensor='temp' OR sensor='battery') GROUP BY sensor\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 308.25,
        "y": 544.5000476837158,
        "wires": [
            [
                "aeaa8669e59b1c15"
            ]
        ]
    },
    {
        "id": "aeaa8669e59b1c15",
        "type": "sqlite",
        "z": "c88e7df93ca8c77d",
        "mydb": "1c25415d.b8427f",
        "name": "DB",
        "x": 495.25,
        "y": 543.5000476837158,
        "wires": [
            [
                "65dfc6347cda220d"
            ]
        ]
    },
    {
        "id": "ad5539492f0697c0",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "Get Last values",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n// calculate end of the day\nd.setHours(23);\nd.setMinutes(59);\nd.setSeconds(59);\nd.setMilliseconds(999);\nvar enddate = d.getTime();\n\noutput.push({ topic:\"SELECT device,sensor,value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND device='growatt' AND sensor='today' ORDER BY id DESC LIMIT 1 \" });\noutput.push({ topic:\"SELECT device,sensor,value FROM sensor_data WHERE epoch >= \" + fromdate + \" AND epoch <= \" + enddate + \" AND device='miflora' AND sensor='moisture' ORDER BY id DESC LIMIT 1 \" });\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "x": 308.25,
        "y": 660.5000476837158,
        "wires": [
            [
                "cd6f2f056dc3c8b3"
            ]
        ]
    },
    {
        "id": "cd6f2f056dc3c8b3",
        "type": "sqlite",
        "z": "c88e7df93ca8c77d",
        "mydb": "1c25415d.b8427f",
        "name": "DB",
        "x": 495.25,
        "y": 659.5000476837158,
        "wires": [
            [
                "98271acbdde3c8c7"
            ]
        ]
    },
    {
        "id": "a865818e82130957",
        "type": "inject",
        "z": "c88e7df93ca8c77d",
        "name": "",
        "repeat": "",
        "crontab": "01 3 * * *",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 125.25,
        "y": 548.5000476837158,
        "wires": [
            [
                "21b38b1ec98371e4"
            ]
        ]
    },
    {
        "id": "be13d761171b7e42",
        "type": "inject",
        "z": "c88e7df93ca8c77d",
        "name": "",
        "repeat": "",
        "crontab": "02 3 * * *",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 119.25,
        "y": 663.5000476837158,
        "wires": [
            [
                "ad5539492f0697c0"
            ]
        ]
    },
    {
        "id": "98271acbdde3c8c7",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "SQL Updates",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n\nmsg.topic = \"INSERT OR REPLACE INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[0].device+\"','\"+msg.payload[0].sensor+\"',\"+msg.payload[0].value+\")\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 675.2500152587891,
        "y": 705.5000953674316,
        "wires": [
            [
                "cd9f08a29d9cfdef"
            ]
        ]
    },
    {
        "id": "3801f375cb679ce4",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "SQL Updates",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n\nfor (var i=0; i<msg.payload.length; i++) {\n    output.push({ topic:\"INSERT OR REPLACE INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[i].device+\"','\"+msg.payload[i].sensor+\"_max',\"+msg.payload[i].value+\")\" });\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "x": 656.2500152587891,
        "y": 497.50009536743164,
        "wires": [
            [
                "cd9f08a29d9cfdef"
            ]
        ]
    },
    {
        "id": "65dfc6347cda220d",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "SQL Updates",
        "func": "var output = [];\nvar d = new Date();\nvar epoch = d.getTime();\n// Go to previous day\nd.setTime(d.getTime()-(24*60*60*1000));\n// calculate begining of the day\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nd.setMilliseconds(0);\nvar fromdate = d.getTime();\n\nfor (var i=0; i<msg.payload.length; i++) {\n    output.push({ topic:\"INSERT OR REPLACE INTO sensor_aggr (epoch,device,sensor,value) VALUES(\"+fromdate+\",'\"+msg.payload[i].device+\"','\"+msg.payload[i].sensor+\"_min',\"+msg.payload[i].value+\")\" });\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "x": 670.2500152587891,
        "y": 599.5000953674316,
        "wires": [
            [
                "cd9f08a29d9cfdef"
            ]
        ]
    },
    {
        "id": "cd9f08a29d9cfdef",
        "type": "sqlite",
        "z": "c88e7df93ca8c77d",
        "mydb": "1c25415d.b8427f",
        "name": "DB",
        "x": 908.5833282470703,
        "y": 560.5000953674316,
        "wires": [
            []
        ]
    },
    {
        "id": "177f38cb0da2785b",
        "type": "comment",
        "z": "c88e7df93ca8c77d",
        "name": "Calculate aggregated values (min,max,last)",
        "info": "",
        "x": 395.5833282470703,
        "y": 396.5000476837158,
        "wires": []
    },
    {
        "id": "eeae1799ab0ae760",
        "type": "comment",
        "z": "c88e7df93ca8c77d",
        "name": "Insert aggregated values to new table",
        "info": "",
        "x": 756.5833282470703,
        "y": 448.5000476837158,
        "wires": []
    },
    {
        "id": "3f0787086cb14c3c",
        "type": "ui_chart",
        "z": "c88e7df93ca8c77d",
        "name": "Temperature",
        "group": "4f6e1b77f656a46a",
        "order": 2,
        "width": "",
        "height": "",
        "label": "",
        "chartType": "line",
        "xformat": "%H:%M:%S",
        "interpolate": "linear",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderUnit": "86400",
        "outputs": 1,
        "x": 628.25,
        "y": 248.75,
        "wires": [
            [
                "dab19e429e09d23a"
            ]
        ]
    },
    {
        "id": "dab19e429e09d23a",
        "type": "file",
        "z": "c88e7df93ca8c77d",
        "name": "Chart dump",
        "filename": "/home/pi/charts/miflora_temp.dump",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 822.25,
        "y": 242.75,
        "wires": [
            []
        ]
    },
    {
        "id": "f9b220ba8871b87e",
        "type": "file in",
        "z": "c88e7df93ca8c77d",
        "name": "Chart dump",
        "filename": "/home/pi/charts/miflora_temp.dump",
        "format": "utf8",
        "x": 270.25,
        "y": 250.75,
        "wires": [
            [
                "523afa4da777038b"
            ]
        ]
    },
    {
        "id": "8a54358c152e43f2",
        "type": "inject",
        "z": "c88e7df93ca8c77d",
        "name": "Startup",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 116.25,
        "y": 251.75,
        "wires": [
            [
                "f9b220ba8871b87e"
            ]
        ]
    },
    {
        "id": "523afa4da777038b",
        "type": "json",
        "z": "c88e7df93ca8c77d",
        "name": "",
        "x": 422.25,
        "y": 250.75,
        "wires": [
            [
                "3f0787086cb14c3c"
            ]
        ]
    },
    {
        "id": "9e5dc3b5ce74dc65",
        "type": "comment",
        "z": "c88e7df93ca8c77d",
        "name": "Dashboard graph backup example",
        "info": "This flow section shows how to back up the graph\nstate to a local file and restore that at startup.\nThis loads the last graph state so you don't get\nthe \"No data\" screen after node red restart.",
        "x": 187.5,
        "y": 191.25,
        "wires": []
    },
    {
        "id": "382e21b7b86e6cde",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "SQL",
        "func": "// This will handle any device and any attribute as long as it is in the DB\nvar Week  = 604800000 ; //7 Days\nvar Day   =  86400000 ; // 1 Days\nvar d = new Date();\nvar epoch = d.getTime();\nvar fromdate = epoch - Day;\nvar enddate = epoch;\nvar output = [];\n\nfor (var property in msg.payload) {\n    if (msg.payload.hasOwnProperty(property)) {\n        //output.push({ payload: property + \" has value \"+msg.payload[property] });\n        if (msg.payload[property]) {\n            var parts = property.split(\"/\");\n            if (parts[0]===\"period\") {\n                switch (parts[1]) {\n                    case \"today\":\n                        fromdate = epoch-Day;\n                        enddate = epoch;\n                        break;\n                    case \"yesterday\":\n                        fromdate = epoch-2*Day;\n                        enddate = epoch-Day;\n                        break;\n                    case \"week\":\n                        fromdate = epoch-Week;\n                        enddate = epoch;\n                        break;\n                }\n            } else {\n                output.push({ topic: \"SELECT * FROM sensor_data WHERE device='\"+parts[0]+\"' AND sensor='\"+parts[1]+\"' AND epoch >= \" + fromdate + \" AND epoch <= \" + enddate });\n            }\n        }\n    }\n}\n\noutput[output.length-1].complete=true;\n\nreturn [ output ];\n\n//msg.topic = \"SELECT * FROM sensor_data WHERE device='growatt' AND sensor='power' AND epoch >= \" + fromdate + \" AND epoch <= \" + epoch ;\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 316.25,
        "y": 895,
        "wires": [
            [
                "1f72237b87734af3"
            ]
        ]
    },
    {
        "id": "1f72237b87734af3",
        "type": "sqlite",
        "z": "c88e7df93ca8c77d",
        "mydb": "1c25415d.b8427f",
        "name": "DB",
        "x": 462.25,
        "y": 896,
        "wires": [
            [
                "ac55664e70d6c969"
            ]
        ]
    },
    {
        "id": "6e779509ca590772",
        "type": "ui_chart",
        "z": "c88e7df93ca8c77d",
        "name": "Chart",
        "group": "aed124ab48a2fe2a",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "%a %H:%M",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderUnit": "604800",
        "outputs": 2,
        "x": 809.25,
        "y": 996,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cd70e8316d3a38f0",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "Prep",
        "func": "var msg2 = [];\n\n// this is the logic when there are multiple data sets are received\nfor (var i=0; i<msg.payload.length; i++) {\n    var output = [];\n    for (var j=0; j<msg.payload[i].length; j++) {\n        output.push([msg.payload[i][j].epoch, msg.payload[i][j].value]);\n    }\n    msg2.push({ key: msg.payload[i][0].device+\"/\"+msg.payload[i][0].sensor, values : output});\n    //msg2.push({ key: \"test\", values : output});\n}\n\nmsg.payload=msg2;\n//msg.payload = [ { key: \"Power\", values : output} ];\n//msg.topic = \"Power\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 793.25,
        "y": 898,
        "wires": [
            [
                "6e779509ca590772"
            ]
        ]
    },
    {
        "id": "8ecc8ef480f4d06e",
        "type": "inject",
        "z": "c88e7df93ca8c77d",
        "name": "Reset chart",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 151.25,
        "y": 1018,
        "wires": [
            [
                "c17d0554fd03aece"
            ]
        ]
    },
    {
        "id": "c17d0554fd03aece",
        "type": "function",
        "z": "c88e7df93ca8c77d",
        "name": "Empty payload",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 479.25,
        "y": 1017,
        "wires": [
            [
                "6e779509ca590772"
            ]
        ]
    },
    {
        "id": "89c624ca3a00c312",
        "type": "ui_form",
        "z": "c88e7df93ca8c77d",
        "name": "Data points",
        "label": "",
        "group": "b297af9bb1a4c442",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Period: today",
                "value": "period/today",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Period: yesterday",
                "value": "period/yesterday",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Period: this week",
                "value": "period/week",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Miflora temperature",
                "value": "miflora/temp",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Miflora battery level",
                "value": "miflora/battery",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Miflora sunlight",
                "value": "miflora/sunlight",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Miflora soil moisture",
                "value": "miflora/moisture",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Miflora soil fertility",
                "value": "miflora/fertility",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Solar power",
                "value": "growatt/power",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Solar voltage",
                "value": "growatt/voltage",
                "type": "checkbox",
                "required": false
            }
        ],
        "formValue": {
            "period/today": false,
            "period/yesterday": false,
            "period/week": false,
            "miflora/temp": false,
            "miflora/battery": false,
            "miflora/sunlight": false,
            "miflora/moisture": false,
            "miflora/fertility": false,
            "growatt/power": false,
            "growatt/voltage": false
        },
        "payload": "",
        "topic": "",
        "x": 121.25,
        "y": 842,
        "wires": [
            [
                "382e21b7b86e6cde"
            ]
        ]
    },
    {
        "id": "ac55664e70d6c969",
        "type": "join",
        "z": "c88e7df93ca8c77d",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "timeout": "",
        "count": "",
        "x": 604.25,
        "y": 896,
        "wires": [
            [
                "cd70e8316d3a38f0"
            ]
        ]
    },
    {
        "id": "40bee6f8a7712821",
        "type": "comment",
        "z": "c88e7df93ca8c77d",
        "name": "Dynamic report example",
        "info": "This flow can generate graph based from data stored\nin the database and display multiple data points\nin a single graph.",
        "x": 153.75,
        "y": 787.5,
        "wires": []
    },
    {
        "id": "f4d0afd03d28dbc8",
        "type": "inject",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 180,
        "wires": [
            [
                "3cb4b621a3898695"
            ]
        ]
    },
    {
        "id": "3cb4b621a3898695",
        "type": "function",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "func": "var d = new Date(1,9,2021);\nvar day = d.getTime();\nmsg.payload = day;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 160,
        "wires": [
            [
                "c54be101c7ddab8f",
                "f62ae7bfebe0d23f"
            ]
        ]
    },
    {
        "id": "f62ae7bfebe0d23f",
        "type": "debug",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "c44dc2a2ec23cec3",
        "type": "ui_date_picker",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "From",
        "group": "e851faa98ab177bb",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 140,
        "wires": [
            [
                "4d4ea138221bf0be"
            ]
        ]
    },
    {
        "id": "4d4ea138221bf0be",
        "type": "debug",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 140,
        "wires": []
    },
    {
        "id": "7074a1b215ec5c72",
        "type": "ui_date_picker",
        "z": "b6ab8eba4e78f23f",
        "name": "",
        "label": "To",
        "group": "e851faa98ab177bb",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 200,
        "wires": [
            [
                "4d4ea138221bf0be"
            ]
        ]
    },
    {
        "id": "60ca4e1f.58d9a8",
        "type": "ui_button",
        "z": "4ff48984.4f9cb",
        "name": "Button",
        "group": "d68e7be3.88f088",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Button",
        "tooltip": "",
        "color": "#fffff",
        "bgcolor": "",
        "icon": "fa-star",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Button",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "c5c459e7.f4a85",
        "type": "ui_dropdown",
        "z": "4ff48984.4f9cb",
        "name": "Choice",
        "label": "Choose what you want ",
        "tooltip": "",
        "place": "",
        "group": "d68e7be3.88f088",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Choice 1 : String",
                "value": "String",
                "type": "str"
            },
            {
                "label": "Choice 2 : Number",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Choice 3 :Boolean",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Choice ",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "5402bb8a.bff144",
        "type": "debug",
        "z": "4ff48984.4f9cb",
        "name": "Dashboard Log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 200,
        "wires": []
    },
    {
        "id": "2aa8229.cf9265e",
        "type": "ui_switch",
        "z": "4ff48984.4f9cb",
        "name": "Light Switch",
        "label": "switch",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Light Switch ",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "f559c07a.8ac77",
        "type": "ui_slider",
        "z": "4ff48984.4f9cb",
        "name": "Slider",
        "label": "slider",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Slider",
        "min": 0,
        "max": 10,
        "step": 1,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "4a336fc.fd0001",
        "type": "ui_numeric",
        "z": "4ff48984.4f9cb",
        "name": "",
        "label": "numeric",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "Numérique",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "dc7a2e3e.65436",
        "type": "ui_text_input",
        "z": "4ff48984.4f9cb",
        "name": "",
        "label": "Text Entry Field ",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "Text Entry Feild",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "76836903.e5e028",
        "type": "ui_form",
        "z": "4ff48984.4f9cb",
        "name": "",
        "label": "Form in Node-RED ",
        "group": "54bca71e.4287f",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "Name",
                "type": "text",
                "required": true
            },
            {
                "label": "Number",
                "value": "Number",
                "type": "number",
                "required": false
            },
            {
                "label": "Email",
                "value": "Email",
                "type": "email",
                "required": false
            },
            {
                "label": "Password",
                "value": "Password",
                "type": "password",
                "required": false
            },
            {
                "label": "Check Box",
                "value": "Check Box",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Light Switch",
                "value": "Light Switch",
                "type": "switch",
                "required": false
            }
        ],
        "formValue": {
            "Name": "",
            "Number": "",
            "Email": "",
            "Password": "",
            "Check Box": false,
            "Light Switch": false
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancle",
        "topic": "Form",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "36cff23e.eb790e",
        "type": "function",
        "z": "4ff48984.4f9cb",
        "name": "Save Events",
        "func": "\n// initialise the counter to 0 if it doesn't exist already\nvar dashboardLog = context.get('dashboardLog')|| [];\n\ndashboardLog.push(msg);\nif (dashboardLog.length > 20){\n    // Delete oldest message if > 20\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n} \n\n\n// store the value back\ncontext.set('dashboardLog',dashboardLog);\n\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = dashboardLog;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "5402bb8a.bff144",
                "4ebedf10.25873"
            ]
        ]
    },
    {
        "id": "4ebedf10.25873",
        "type": "ui_template",
        "z": "4ff48984.4f9cb",
        "group": "6d4b6f37.3f68b",
        "name": "Dashboard Event Log ",
        "order": 1,
        "width": 8,
        "height": 10,
        "format": "<ul>\n <li ng-repeat=\"x in msg.payload\">\n <font color=\"red\">{{x.topic}}</font>\n    <ul>\n        <li>{{x.payload}}</li>\n    </ul>\n </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f91cf7ee.1cbde8",
        "type": "ui_text_input",
        "z": "4ff48984.4f9cb",
        "name": "",
        "label": "Email Field",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "Email Field",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "2fcb4353.31090c",
        "type": "ui_text_input",
        "z": "4ff48984.4f9cb",
        "name": "",
        "label": "Password Field",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "Password ",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "36cff23e.eb790e"
            ]
        ]
    },
    {
        "id": "5f88c615.20452",
        "type": "ui_text_input",
        "z": "4ff48984.4f9cb",
        "name": "",
        "label": "Select a color",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "color",
        "delay": 300,
        "topic": "Select a color",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "36cff23e.eb790e",
                "d9890ea55db49781"
            ]
        ]
    },
    {
        "id": "d9890ea55db49781",
        "type": "function",
        "z": "4ff48984.4f9cb",
        "name": "Save Events",
        "func": "\n// initialise the counter to 0 if it doesn't exist already\nvar dashboardLog = context.get('dashboardLog')|| [];\n\ndashboardLog.push(msg);\n\n\n// store the value back\ncontext.set('dashboardLog',dashboardLog);\n\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = dashboardLog;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "85c38f8d09901f76"
            ]
        ]
    },
    {
        "id": "85c38f8d09901f76",
        "type": "debug",
        "z": "4ff48984.4f9cb",
        "name": "Dashboard Log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 400,
        "wires": []
    },
    {
        "id": "2dc34d8df7bd4c0a",
        "type": "ui_template",
        "z": "4ff48984.4f9cb",
        "group": "bc85d55e33b35302",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css\">\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"></script>\n <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"></script>\n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js\"></script>\n\n<div id=\"chart-example\" style=\"height: 250px;\"></div>\n\n<h3 align=\"center\">UK power generation by type (in GigaWatt) </h3>\n\n<script>\n\n(function(scope) {\n var timer = setInterval(function() { //check that the Morris libs are loaded, if not wait\n if (!window.Morris) return;\n clearInterval(timer);\n \n var myData;\n \n var myDonut = Morris.Donut({\n element: 'chart-example',\n data: [\n {label: \"Coal GW\", value: 1 },\n {label: \"Gas GW\", value: 1 },\n {label: \"Nuclear GW\", value: 1 },\n {label: \"Oil GW\", value: 1 },\n {label: \"Wind GW\", value: 1 }\n ]\n });\n \n scope.$watch('msg', function (msg) { //watch for an incoming NR msg\n if (msg) {\n \n myData = msg;\n myDonut.setData([\n {label: \"Coal GW\", value: myData.payload.coalPct },\n {label: \"Gas GW\", value: myData.payload.gasPct },\n {label: \"Nuclear GW\", value: myData.payload.nucPct },\n {label: \"Oil GW\", value: myData.payload.oilPct },\n {label: \"Wind GW\", value: myData.payload.windPct }\n ])\n };\n }); //close out the watch \n }, 100); // close out the setInterval \n})(scope);\n\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 580,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "80c17670880bc307",
        "type": "inject",
        "z": "4ff48984.4f9cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "2dc34d8df7bd4c0a"
            ]
        ]
    },
    {
        "id": "4b5dc8f9.3f0028",
        "type": "debug",
        "z": "dface2e8.633cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "a7a03602.ff79a8",
        "type": "ui_template",
        "z": "dface2e8.633cb",
        "group": "58c016f8.563088",
        "name": "Mostra Tabela",
        "order": 3,
        "width": "12",
        "height": "6",
        "format": "<div layout=\"row\" layout-align=\"start center\">\n    <span flex><b>Data</b></span> \n    <span flex><b>Hora</b></span>\n    <span flex><b>Set Point Ar1</b></span> \n    <span flex><b>Set Point Ar2</b></span>\n    <span flex><b>Temperatura Ar1</b></span>\n    <span flex><b>Temperatura Ar2</b></span>\n</div>\n<div layout=\"row\" layout-align=\"start center\" ng-repeat=\"x in msg.payload | limitTo:20\">\n    <span flex>{{x.DATA}}</span>\n    <span flex style=\"color: green\">{{x.HORA}}</span>    \n    <span flex style=\"color: red\">{{x.SETPOINTAR1}}</span>\n    <span flex>{{x.SETPOINTAR2}}</span>\n    <span flex>{{x.TEMPERATURAAR1}}</span>\n    <span flex>{{x.TEMPERATURAAR2}}</span>\n    \n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 820,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fb0b1578.82de38",
        "type": "inject",
        "z": "dface2e8.633cb",
        "name": "Dataset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"DATA\":[51,48,47,48,52,47,50,48,49,57],\"HORA\":[49,48,58,50,49],\"SETPOINTAR1\":[51,48,46,48,48],\"SETPOINTAR2\":[50,50,46,48,48],\"TEMPERATURAAR1\":[50,55,46,53,48],\"TEMPERATURAAR2\":[49,55,46,55,48]},{\"DATA\":[51,48,47,48,52,47,50,48,49,57],\"HORA\":[49,49,58,50,49],\"SETPOINTAR1\":[51,50,46,53,53],\"SETPOINTAR2\":[49,50,46,52,48],\"TEMPERATURAAR1\":[49,55,46,55,56],\"TEMPERATURAAR2\":[50,55,46,49,48]},{\"DATA\":[48,51,47,48,53,47,50,48,49,57],\"HORA\":[49,49,58,53,56],\"SETPOINTAR1\":[51,49,46,48,48],\"SETPOINTAR2\":[50,51,46,48,48],\"TEMPERATURAAR1\":[50,57,46,53,48],\"TEMPERATURAAR2\":[52,55,46,55,48]}]",
        "payloadType": "json",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "6f1c4c23.de87c4"
            ]
        ]
    },
    {
        "id": "be6e81b6.1d5e5",
        "type": "function",
        "z": "dface2e8.633cb",
        "name": "Array to Buffer",
        "func": "msg.payload.DATA = Buffer.from(msg.payload.DATA);\nmsg.payload.SETPOINTAR1 = Buffer.from(msg.payload.SETPOINTAR1);\nmsg.payload.SETPOINTAR2 = Buffer.from(msg.payload.SETPOINTAR2);\nmsg.payload.TEMPERATURAAR1 = Buffer.from(msg.payload.TEMPERATURAAR1);\nmsg.payload.TEMPERATURAAR2 = Buffer.from(msg.payload.TEMPERATURAAR2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 60,
        "wires": [
            [
                "51d4b67f.a9ddc8"
            ]
        ]
    },
    {
        "id": "6f1c4c23.de87c4",
        "type": "split",
        "z": "dface2e8.633cb",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "be6e81b6.1d5e5",
                "cee340d9ce2b8832"
            ]
        ]
    },
    {
        "id": "51d4b67f.a9ddc8",
        "type": "function",
        "z": "dface2e8.633cb",
        "name": "Buffer to String",
        "func": "msg.payload.DATA = String.fromCharCode(...msg.payload.DATA);\nmsg.payload.HORA = String.fromCharCode(...msg.payload.HORA);\nmsg.payload.SETPOINTAR1 = String.fromCharCode(...msg.payload.SETPOINTAR1);\nmsg.payload.SETPOINTAR2 = String.fromCharCode(...msg.payload.SETPOINTAR2);\nmsg.payload.TEMPERATURAAR1 = String.fromCharCode(...msg.payload.TEMPERATURAAR1);\nmsg.payload.TEMPERATURAAR2 = String.fromCharCode(...msg.payload.TEMPERATURAAR2);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 140,
        "wires": [
            [
                "ec3f1284.bb2f1"
            ]
        ]
    },
    {
        "id": "ec3f1284.bb2f1",
        "type": "join",
        "z": "dface2e8.633cb",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 140,
        "wires": [
            [
                "4b5dc8f9.3f0028",
                "a7a03602.ff79a8"
            ]
        ]
    },
    {
        "id": "cee340d9ce2b8832",
        "type": "debug",
        "z": "dface2e8.633cb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 240,
        "wires": []
    }
]